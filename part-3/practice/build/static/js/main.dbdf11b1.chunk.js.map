{"version":3,"sources":["components/Note.js","services/notes.js","components/App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","useEffect","noteService","initialNotes","console","log","length","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","error","alert","toggleImportanceOf","onSubmit","event","preventDefault","target","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","type","ReactDOM","render","document","getElementById"],"mappings":"iLAYeA,EAVF,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,iBACXC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEzD,OACC,+BAAKH,EAAKI,QACA,wBAAQC,QAASJ,EAAjB,SAAoCC,Q,gBCL1CI,EAAU,aAiBD,EAfA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVE,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALE,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SC6E9BK,EAxFH,SAACC,GAAW,IAAD,EAEIC,mBAAS,IAFb,mBAEfC,EAFe,KAERC,EAFQ,OAGQF,mBAC7B,iBAJqB,mBAGfG,EAHe,KAGNC,EAHM,OAMQJ,oBAAS,GANjB,mBAMfK,EANe,KAMNC,EANM,KAQnBC,qBAAU,WACNC,IAEGjB,MAAK,SAAAkB,GACJP,EAASO,QAEZ,IAELC,QAAQC,IAAI,SAAUV,EAAMW,OAAQ,SAEvC,IAuBMC,EAAcR,EAAUJ,EAAQA,EAAMa,QAAO,SAAAhC,GAAI,OAAuB,IAAnBA,EAAKG,aAoBhE,OACC,gCACC,uCACA,8BACC,yBAAQE,QAAS,kBAAMmB,GAAYD,IAAnC,kBACOA,EAAU,YAAc,WAGhC,6BACEQ,EAAYE,KAAI,SAAAjC,GAAI,OACT,cAAC,EAAD,CAEIA,KAAMA,EACNC,iBAAkB,kBA/BP,SAACa,GACxBc,QAAQC,IAAI,iBAAmBf,EAAK,wBACpC,IAAMd,EAAOmB,EAAMe,MAAK,SAAAC,GAAC,OAAIA,EAAErB,KAAOA,KAChCsB,EAAW,2BAAOpC,GAAP,IAAaG,WAAYH,EAAKG,YAE/CuB,EACYZ,EAAIsB,GACX3B,MAAK,SAAA4B,GACFjB,EAASD,EAAMc,KAAI,SAAAjC,GAAI,OAAIA,EAAKc,KAAOA,EAAKd,EAAOqC,SAEtDC,OAAM,SAAAC,GACHC,MAAM,aAAD,OACYxC,EAAKI,QADjB,sCAGLgB,EAASD,EAAMa,QAAO,SAAAG,GAAC,OAAIA,EAAErB,KAAOA,SAiBR2B,CAAmBzC,EAAKc,MAF3Cd,EAAKc,SAK3B,uBAAM4B,SA3DQ,SAACC,GAChBA,EAAMC,iBACNhB,QAAQC,IAAI,iBAAkBc,EAAME,QACpC,IAAMC,EAAa,CAClB1C,QAASiB,EACT0B,MAAM,IAAIC,MAAOC,cACjB9C,UAAW+C,KAAKC,SAAW,GAC3BrC,GAAIK,EAAMW,OAAS,GAGdJ,EACQoB,GACPrC,MAAK,SAAA4B,GACNjB,EAASD,EAAMiC,OAAOf,IACpBf,EAAW,QA6ClB,UACC,uBACC+B,MAAOhC,EACPiC,SA5CqB,SAACX,GACzBf,QAAQC,IAAIc,EAAME,OAAOQ,OACzB/B,EAAWqB,EAAME,OAAOQ,UA4CtB,wBAAQE,KAAK,SAAb,2BC3DJC,IAASC,OACD,cAAC,EAAD,CAAKtC,MAxBC,CACb,CACEL,GAAI,EACJV,QAAS,eACT2C,KAAM,2BACN5C,WAAW,GAEb,CACEW,GAAI,EACJV,QAAS,sCACT2C,KAAM,2BACN5C,WAAW,GAEb,CACEW,GAAI,EACJV,QAAS,+DACT2C,KAAM,2BACN5C,WAAW,MAQNuD,SAASC,eAAe,W","file":"static/js/main.dbdf11b1.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({note, toggleImportance}) => {\n    const label = note.important ? 'make not important' : 'make important'\n\n\treturn (\n\t\t<li>{note.content}\n            <button onClick={toggleImportance}>{label}</button>\n        </li>\n\t)\n}\n\nexport default Note","import axios from 'axios'\n\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n  }\n  \n  const create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n  }\n  \n  const update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n  }\n\nexport default {\n    getAll: getAll,\n    create: create, \n    update: update\n}","import React, {useState, useEffect} from 'react'\nimport Note from './Note'\nimport axios from 'axios'\nimport noteService from '../services/notes'\n\nconst App = (props) => {\n    \n\tconst [notes, setNotes] = useState([])\n\tconst [newNote, setNewNote] = useState(\n\t\t'a new note...'\n\t)\n\tconst [showAll, setShowAll] = useState(true)\n\n    useEffect(() => {\n        noteService\n          .getAll()\n          .then(initialNotes => {\n            setNotes(initialNotes)\n          })\n      }, [])\n\n    console.log('render', notes.length, 'notes')\n\n\tconst addNote = (event) => {\n\t\tevent.preventDefault()\n\t\tconsole.log('button clicked', event.target)\n\t\tconst noteObject = {\n\t\t\tcontent: newNote,\n\t\t\tdate: new Date().toISOString(),\n\t\t\timportant: Math.random() < 0.5,\n\t\t\tid: notes.length + 1,\n\t\t}\n\n        noteService\n        .create(noteObject)\n        .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n          setNewNote('')\n    })\n\t}\n\n\tconst handleNoteChange = (event) => {\n\t\tconsole.log(event.target.value)\n\t\tsetNewNote(event.target.value)\n\t}\n\n\tconst notesToShow = showAll ? notes : notes.filter(note => note.important === true)\n\n    const toggleImportanceOf = (id) => {\n        console.log('importance of ' + id + ' needs to be toggled')\n        const note = notes.find(n => n.id === id)\n        const changedNote = {...note, important: !note.important}\n\n        noteService\n            .update(id, changedNote)\n            .then(returnedNote => {\n                setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n            })\n            .catch(error => {\n                alert(\n                    `the note '${note.content}' was already deleted from server`\n                )\n                setNotes(notes.filter(n => n.id !== id))\n            })\n    }\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Notes</h1>\n\t\t\t<div>\n\t\t\t\t<button onClick={() => setShowAll(!showAll)}>\n\t\t\t\t\tshow {showAll ? 'important' : 'all'}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<ul>\n\t\t\t\t{notesToShow.map(note => \n                <Note \n                    key={note.id} \n                    note={note}\n                    toggleImportance={() => toggleImportanceOf(note.id)}\n                />)}\n\t\t\t</ul>\n\t\t\t<form onSubmit={addNote}>\n\t\t\t\t<input \n\t\t\t\t\tvalue={newNote}\n\t\t\t\t\tonChange={handleNoteChange}\n\t\t\t\t/>\n\t\t\t\t<button type=\"submit\">Submit</button>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport axios from 'axios';\n\nconst notes = [\n\t{\n\t  id: 1,\n\t  content: 'HTML is easy',\n\t  date: '2019-05-30T17:30:31.098Z',\n\t  important: true\n\t},\n\t{\n\t  id: 2,\n\t  content: 'Browser can execute only JavaScript',\n\t  date: '2019-05-30T18:39:34.091Z',\n\t  important: false\n\t},\n\t{\n\t  id: 3,\n\t  content: 'GET and POST are the most important methods of HTTP protocol',\n\t  date: '2019-05-30T19:20:14.298Z',\n\t  important: true\n\t}\n  ]\n\n\n\nReactDOM.render(\n        <App notes={notes}/>,\n        document.getElementById('root')\n)\n"],"sourceRoot":""}